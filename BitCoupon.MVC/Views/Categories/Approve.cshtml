@model IEnumerable<BitCoupon.DAL.Models.Category>

@{
    ViewBag.Title = "Approve";
}

<h2>Approve Categories </h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{
            var count = 0;
        }
        @if (Model.Count() > 0)
        {
            foreach (var item in Model)
            {
               

                @Html.HiddenFor(model => item.Id, new { @Name = "categories[" + count + "].id" })
                <div class="form-group">
                    @Html.LabelFor(modelItem => item.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(modelItem => item.Name, new { htmlAttributes = new { @class = "form-control", @Name = "categories[" + count + "].name" , @readonly = "readonly" } })
                        @Html.ValidationMessageFor(modelItem => item.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => item.Approved, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       
                            @Html.EditorFor(model => item.Approved, new { htmlAttributes = new { @class = "form-control", @Name = "categories[" + count++ + "].approved" } })
                            @Html.ValidationMessageFor(model => item.Approved, "", new { @class = "text-danger" })
                        
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Approve" class="btn btn-success" />
                    </div>
                </div>
            }
        }
        else
        {
            <h2> No categories to approve.</h2>

        }
       
    </div>
            }

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
